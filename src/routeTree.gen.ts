/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardWalletImport } from './routes/_dashboard/wallet'
import { Route as DashboardTradeImport } from './routes/_dashboard/trade'
import { Route as DashboardSwapImport } from './routes/_dashboard/swap'
import { Route as DashboardPreferenceImport } from './routes/_dashboard/preference'
import { Route as DashboardPortfolioImport } from './routes/_dashboard/portfolio'
import { Route as DashboardDashboardImport } from './routes/_dashboard/dashboard'
import { Route as AuthVerifyImport } from './routes/_auth/verify'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardStakeIndexImport } from './routes/_dashboard/stake/index'
import { Route as DashboardMarketplaceIndexImport } from './routes/_dashboard/marketplace/index'
import { Route as DashboardStakeStakeIdImport } from './routes/_dashboard/stake/$stakeId'
import { Route as DashboardPropertyPropertyIdImport } from './routes/_dashboard/property/$propertyId'
import { Route as DashboardMarketplaceMarketplaceIdImport } from './routes/_dashboard/marketplace/$marketplaceId'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardWalletRoute = DashboardWalletImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTradeRoute = DashboardTradeImport.update({
  id: '/trade',
  path: '/trade',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSwapRoute = DashboardSwapImport.update({
  id: '/swap',
  path: '/swap',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPreferenceRoute = DashboardPreferenceImport.update({
  id: '/preference',
  path: '/preference',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPortfolioRoute = DashboardPortfolioImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthVerifyRoute = AuthVerifyImport.update({
  id: '/_auth/verify',
  path: '/verify',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardStakeIndexRoute = DashboardStakeIndexImport.update({
  id: '/stake/',
  path: '/stake/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMarketplaceIndexRoute = DashboardMarketplaceIndexImport.update({
  id: '/marketplace/',
  path: '/marketplace/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardStakeStakeIdRoute = DashboardStakeStakeIdImport.update({
  id: '/stake/$stakeId',
  path: '/stake/$stakeId',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPropertyPropertyIdRoute =
  DashboardPropertyPropertyIdImport.update({
    id: '/property/$propertyId',
    path: '/property/$propertyId',
    getParentRoute: () => DashboardRoute,
  } as any)

const DashboardMarketplaceMarketplaceIdRoute =
  DashboardMarketplaceMarketplaceIdImport.update({
    id: '/marketplace/$marketplaceId',
    path: '/marketplace/$marketplaceId',
    getParentRoute: () => DashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_auth/verify': {
      id: '/_auth/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof AuthVerifyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/portfolio': {
      id: '/_dashboard/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof DashboardPortfolioImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/preference': {
      id: '/_dashboard/preference'
      path: '/preference'
      fullPath: '/preference'
      preLoaderRoute: typeof DashboardPreferenceImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/swap': {
      id: '/_dashboard/swap'
      path: '/swap'
      fullPath: '/swap'
      preLoaderRoute: typeof DashboardSwapImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/trade': {
      id: '/_dashboard/trade'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof DashboardTradeImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/wallet': {
      id: '/_dashboard/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof DashboardWalletImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/marketplace/$marketplaceId': {
      id: '/_dashboard/marketplace/$marketplaceId'
      path: '/marketplace/$marketplaceId'
      fullPath: '/marketplace/$marketplaceId'
      preLoaderRoute: typeof DashboardMarketplaceMarketplaceIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/property/$propertyId': {
      id: '/_dashboard/property/$propertyId'
      path: '/property/$propertyId'
      fullPath: '/property/$propertyId'
      preLoaderRoute: typeof DashboardPropertyPropertyIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/stake/$stakeId': {
      id: '/_dashboard/stake/$stakeId'
      path: '/stake/$stakeId'
      fullPath: '/stake/$stakeId'
      preLoaderRoute: typeof DashboardStakeStakeIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/marketplace/': {
      id: '/_dashboard/marketplace/'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof DashboardMarketplaceIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/stake/': {
      id: '/_dashboard/stake/'
      path: '/stake'
      fullPath: '/stake'
      preLoaderRoute: typeof DashboardStakeIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardPortfolioRoute: typeof DashboardPortfolioRoute
  DashboardPreferenceRoute: typeof DashboardPreferenceRoute
  DashboardSwapRoute: typeof DashboardSwapRoute
  DashboardTradeRoute: typeof DashboardTradeRoute
  DashboardWalletRoute: typeof DashboardWalletRoute
  DashboardMarketplaceMarketplaceIdRoute: typeof DashboardMarketplaceMarketplaceIdRoute
  DashboardPropertyPropertyIdRoute: typeof DashboardPropertyPropertyIdRoute
  DashboardStakeStakeIdRoute: typeof DashboardStakeStakeIdRoute
  DashboardMarketplaceIndexRoute: typeof DashboardMarketplaceIndexRoute
  DashboardStakeIndexRoute: typeof DashboardStakeIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardPortfolioRoute: DashboardPortfolioRoute,
  DashboardPreferenceRoute: DashboardPreferenceRoute,
  DashboardSwapRoute: DashboardSwapRoute,
  DashboardTradeRoute: DashboardTradeRoute,
  DashboardWalletRoute: DashboardWalletRoute,
  DashboardMarketplaceMarketplaceIdRoute:
    DashboardMarketplaceMarketplaceIdRoute,
  DashboardPropertyPropertyIdRoute: DashboardPropertyPropertyIdRoute,
  DashboardStakeStakeIdRoute: DashboardStakeStakeIdRoute,
  DashboardMarketplaceIndexRoute: DashboardMarketplaceIndexRoute,
  DashboardStakeIndexRoute: DashboardStakeIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/verify': typeof AuthVerifyRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/portfolio': typeof DashboardPortfolioRoute
  '/preference': typeof DashboardPreferenceRoute
  '/swap': typeof DashboardSwapRoute
  '/trade': typeof DashboardTradeRoute
  '/wallet': typeof DashboardWalletRoute
  '/marketplace/$marketplaceId': typeof DashboardMarketplaceMarketplaceIdRoute
  '/property/$propertyId': typeof DashboardPropertyPropertyIdRoute
  '/stake/$stakeId': typeof DashboardStakeStakeIdRoute
  '/marketplace': typeof DashboardMarketplaceIndexRoute
  '/stake': typeof DashboardStakeIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/verify': typeof AuthVerifyRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/portfolio': typeof DashboardPortfolioRoute
  '/preference': typeof DashboardPreferenceRoute
  '/swap': typeof DashboardSwapRoute
  '/trade': typeof DashboardTradeRoute
  '/wallet': typeof DashboardWalletRoute
  '/marketplace/$marketplaceId': typeof DashboardMarketplaceMarketplaceIdRoute
  '/property/$propertyId': typeof DashboardPropertyPropertyIdRoute
  '/stake/$stakeId': typeof DashboardStakeStakeIdRoute
  '/marketplace': typeof DashboardMarketplaceIndexRoute
  '/stake': typeof DashboardStakeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_auth/verify': typeof AuthVerifyRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/portfolio': typeof DashboardPortfolioRoute
  '/_dashboard/preference': typeof DashboardPreferenceRoute
  '/_dashboard/swap': typeof DashboardSwapRoute
  '/_dashboard/trade': typeof DashboardTradeRoute
  '/_dashboard/wallet': typeof DashboardWalletRoute
  '/_dashboard/marketplace/$marketplaceId': typeof DashboardMarketplaceMarketplaceIdRoute
  '/_dashboard/property/$propertyId': typeof DashboardPropertyPropertyIdRoute
  '/_dashboard/stake/$stakeId': typeof DashboardStakeStakeIdRoute
  '/_dashboard/marketplace/': typeof DashboardMarketplaceIndexRoute
  '/_dashboard/stake/': typeof DashboardStakeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/test'
    | '/login'
    | '/signup'
    | '/verify'
    | '/dashboard'
    | '/portfolio'
    | '/preference'
    | '/swap'
    | '/trade'
    | '/wallet'
    | '/marketplace/$marketplaceId'
    | '/property/$propertyId'
    | '/stake/$stakeId'
    | '/marketplace'
    | '/stake'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/test'
    | '/login'
    | '/signup'
    | '/verify'
    | '/dashboard'
    | '/portfolio'
    | '/preference'
    | '/swap'
    | '/trade'
    | '/wallet'
    | '/marketplace/$marketplaceId'
    | '/property/$propertyId'
    | '/stake/$stakeId'
    | '/marketplace'
    | '/stake'
  id:
    | '__root__'
    | '/_dashboard'
    | '/test'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_auth/verify'
    | '/_dashboard/dashboard'
    | '/_dashboard/portfolio'
    | '/_dashboard/preference'
    | '/_dashboard/swap'
    | '/_dashboard/trade'
    | '/_dashboard/wallet'
    | '/_dashboard/marketplace/$marketplaceId'
    | '/_dashboard/property/$propertyId'
    | '/_dashboard/stake/$stakeId'
    | '/_dashboard/marketplace/'
    | '/_dashboard/stake/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  TestRoute: typeof TestRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  TestRoute: TestRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  AuthVerifyRoute: AuthVerifyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/test",
        "/_auth/login",
        "/_auth/signup",
        "/_auth/verify"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard",
        "/_dashboard/portfolio",
        "/_dashboard/preference",
        "/_dashboard/swap",
        "/_dashboard/trade",
        "/_dashboard/wallet",
        "/_dashboard/marketplace/$marketplaceId",
        "/_dashboard/property/$propertyId",
        "/_dashboard/stake/$stakeId",
        "/_dashboard/marketplace/",
        "/_dashboard/stake/"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_auth/verify": {
      "filePath": "_auth/verify.tsx"
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/portfolio": {
      "filePath": "_dashboard/portfolio.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/preference": {
      "filePath": "_dashboard/preference.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/swap": {
      "filePath": "_dashboard/swap.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/trade": {
      "filePath": "_dashboard/trade.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/wallet": {
      "filePath": "_dashboard/wallet.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/marketplace/$marketplaceId": {
      "filePath": "_dashboard/marketplace/$marketplaceId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/property/$propertyId": {
      "filePath": "_dashboard/property/$propertyId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/stake/$stakeId": {
      "filePath": "_dashboard/stake/$stakeId.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/marketplace/": {
      "filePath": "_dashboard/marketplace/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/stake/": {
      "filePath": "_dashboard/stake/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
