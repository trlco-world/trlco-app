/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardWalletImport } from './routes/_dashboard/wallet'
import { Route as DashboardTradeImport } from './routes/_dashboard/trade'
import { Route as DashboardSwapImport } from './routes/_dashboard/swap'
import { Route as DashboardPortfolioImport } from './routes/_dashboard/portfolio'
import { Route as DashboardExploreImport } from './routes/_dashboard/explore'
import { Route as DashboardDashboardImport } from './routes/_dashboard/dashboard'
import { Route as AuthSignupImport } from './routes/_auth/signup'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as DashboardStakeIndexImport } from './routes/_dashboard/stake/index'
import { Route as DashboardStakeIdImport } from './routes/_dashboard/stake/$id'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardWalletRoute = DashboardWalletImport.update({
  id: '/wallet',
  path: '/wallet',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTradeRoute = DashboardTradeImport.update({
  id: '/trade',
  path: '/trade',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardSwapRoute = DashboardSwapImport.update({
  id: '/swap',
  path: '/swap',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardPortfolioRoute = DashboardPortfolioImport.update({
  id: '/portfolio',
  path: '/portfolio',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardExploreRoute = DashboardExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardDashboardRoute = DashboardDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardStakeIndexRoute = DashboardStakeIndexImport.update({
  id: '/stake/',
  path: '/stake/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardStakeIdRoute = DashboardStakeIdImport.update({
  id: '/stake/$id',
  path: '/stake/$id',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard': {
      id: '/_dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/explore': {
      id: '/_dashboard/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof DashboardExploreImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/portfolio': {
      id: '/_dashboard/portfolio'
      path: '/portfolio'
      fullPath: '/portfolio'
      preLoaderRoute: typeof DashboardPortfolioImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/swap': {
      id: '/_dashboard/swap'
      path: '/swap'
      fullPath: '/swap'
      preLoaderRoute: typeof DashboardSwapImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/trade': {
      id: '/_dashboard/trade'
      path: '/trade'
      fullPath: '/trade'
      preLoaderRoute: typeof DashboardTradeImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/wallet': {
      id: '/_dashboard/wallet'
      path: '/wallet'
      fullPath: '/wallet'
      preLoaderRoute: typeof DashboardWalletImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/stake/$id': {
      id: '/_dashboard/stake/$id'
      path: '/stake/$id'
      fullPath: '/stake/$id'
      preLoaderRoute: typeof DashboardStakeIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/stake/': {
      id: '/_dashboard/stake/'
      path: '/stake'
      fullPath: '/stake'
      preLoaderRoute: typeof DashboardStakeIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardDashboardRoute: typeof DashboardDashboardRoute
  DashboardExploreRoute: typeof DashboardExploreRoute
  DashboardPortfolioRoute: typeof DashboardPortfolioRoute
  DashboardSwapRoute: typeof DashboardSwapRoute
  DashboardTradeRoute: typeof DashboardTradeRoute
  DashboardWalletRoute: typeof DashboardWalletRoute
  DashboardStakeIdRoute: typeof DashboardStakeIdRoute
  DashboardStakeIndexRoute: typeof DashboardStakeIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardDashboardRoute: DashboardDashboardRoute,
  DashboardExploreRoute: DashboardExploreRoute,
  DashboardPortfolioRoute: DashboardPortfolioRoute,
  DashboardSwapRoute: DashboardSwapRoute,
  DashboardTradeRoute: DashboardTradeRoute,
  DashboardWalletRoute: DashboardWalletRoute,
  DashboardStakeIdRoute: DashboardStakeIdRoute,
  DashboardStakeIndexRoute: DashboardStakeIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/explore': typeof DashboardExploreRoute
  '/portfolio': typeof DashboardPortfolioRoute
  '/swap': typeof DashboardSwapRoute
  '/trade': typeof DashboardTradeRoute
  '/wallet': typeof DashboardWalletRoute
  '/stake/$id': typeof DashboardStakeIdRoute
  '/stake': typeof DashboardStakeIndexRoute
}

export interface FileRoutesByTo {
  '': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
  '/dashboard': typeof DashboardDashboardRoute
  '/explore': typeof DashboardExploreRoute
  '/portfolio': typeof DashboardPortfolioRoute
  '/swap': typeof DashboardSwapRoute
  '/trade': typeof DashboardTradeRoute
  '/wallet': typeof DashboardWalletRoute
  '/stake/$id': typeof DashboardStakeIdRoute
  '/stake': typeof DashboardStakeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/test': typeof TestRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_dashboard/dashboard': typeof DashboardDashboardRoute
  '/_dashboard/explore': typeof DashboardExploreRoute
  '/_dashboard/portfolio': typeof DashboardPortfolioRoute
  '/_dashboard/swap': typeof DashboardSwapRoute
  '/_dashboard/trade': typeof DashboardTradeRoute
  '/_dashboard/wallet': typeof DashboardWalletRoute
  '/_dashboard/stake/$id': typeof DashboardStakeIdRoute
  '/_dashboard/stake/': typeof DashboardStakeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/test'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/explore'
    | '/portfolio'
    | '/swap'
    | '/trade'
    | '/wallet'
    | '/stake/$id'
    | '/stake'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/test'
    | '/login'
    | '/signup'
    | '/dashboard'
    | '/explore'
    | '/portfolio'
    | '/swap'
    | '/trade'
    | '/wallet'
    | '/stake/$id'
    | '/stake'
  id:
    | '__root__'
    | '/_dashboard'
    | '/test'
    | '/_auth/login'
    | '/_auth/signup'
    | '/_dashboard/dashboard'
    | '/_dashboard/explore'
    | '/_dashboard/portfolio'
    | '/_dashboard/swap'
    | '/_dashboard/trade'
    | '/_dashboard/wallet'
    | '/_dashboard/stake/$id'
    | '/_dashboard/stake/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  TestRoute: typeof TestRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  TestRoute: TestRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/test",
        "/_auth/login",
        "/_auth/signup"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard",
        "/_dashboard/explore",
        "/_dashboard/portfolio",
        "/_dashboard/swap",
        "/_dashboard/trade",
        "/_dashboard/wallet",
        "/_dashboard/stake/$id",
        "/_dashboard/stake/"
      ]
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx"
    },
    "/_auth/signup": {
      "filePath": "_auth/signup.tsx"
    },
    "/_dashboard/dashboard": {
      "filePath": "_dashboard/dashboard.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/explore": {
      "filePath": "_dashboard/explore.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/portfolio": {
      "filePath": "_dashboard/portfolio.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/swap": {
      "filePath": "_dashboard/swap.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/trade": {
      "filePath": "_dashboard/trade.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/wallet": {
      "filePath": "_dashboard/wallet.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/stake/$id": {
      "filePath": "_dashboard/stake/$id.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/stake/": {
      "filePath": "_dashboard/stake/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
